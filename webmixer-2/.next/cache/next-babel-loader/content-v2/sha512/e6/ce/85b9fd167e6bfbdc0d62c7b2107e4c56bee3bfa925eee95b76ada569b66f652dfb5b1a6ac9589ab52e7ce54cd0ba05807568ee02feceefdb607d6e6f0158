{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/tobias/Developer/digitalstage/ds-client/webmixer/pages/index.tsx\";\nimport { useEffect } from 'react';\nimport io from 'socket.io-client';\nexport default (() => {\n  useEffect(() => {\n    fetch('/api/socket').finally(() => {\n      const socket = io();\n      socket.on('connect', () => {\n        console.log('connect');\n        socket.emit('config');\n      });\n      socket.on('scene', data => {\n        console.log('scene', data);\n      });\n      socket.on('disconnect', () => {\n        console.log('disconnect');\n      });\n    });\n  });\n  return /*#__PURE__*/_jsxDEV(\"h1\", {\n    children: \"Socket.io\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 12\n  }, this);\n});","map":{"version":3,"sources":["/Users/tobias/Developer/digitalstage/ds-client/webmixer/pages/index.tsx"],"names":["useEffect","io","fetch","finally","socket","on","console","log","emit","data"],"mappings":";;AAAA,SAAQA,SAAR,QAAwB,OAAxB;AACA,OAAOC,EAAP,MAAe,kBAAf;AAEA,gBAAe,MAAM;AACjBD,EAAAA,SAAS,CAAC,MAAM;AACZE,IAAAA,KAAK,CAAC,aAAD,CAAL,CAAqBC,OAArB,CAA6B,MAAM;AAC/B,YAAMC,MAAM,GAAGH,EAAE,EAAjB;AAEAG,MAAAA,MAAM,CAACC,EAAP,CAAU,SAAV,EAAqB,MAAM;AACvBC,QAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AACAH,QAAAA,MAAM,CAACI,IAAP,CAAY,QAAZ;AACH,OAHD;AAKAJ,MAAAA,MAAM,CAACC,EAAP,CAAU,OAAV,EAAmBI,IAAI,IAAI;AACvBH,QAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBE,IAArB;AACH,OAFD;AAIAL,MAAAA,MAAM,CAACC,EAAP,CAAU,YAAV,EAAwB,MAAM;AAC1BC,QAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ;AACH,OAFD;AAGH,KAfD;AAgBH,GAjBQ,CAAT;AAmBA,sBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACH,CArBD","sourcesContent":["import {useEffect} from 'react';\nimport io from 'socket.io-client';\n\nexport default () => {\n    useEffect(() => {\n        fetch('/api/socket').finally(() => {\n            const socket = io()\n\n            socket.on('connect', () => {\n                console.log('connect')\n                socket.emit('config')\n            })\n\n            socket.on('scene', data => {\n                console.log('scene', data)\n            })\n\n            socket.on('disconnect', () => {\n                console.log('disconnect')\n            })\n        })\n    })\n\n    return <h1>Socket.io</h1>\n}"]},"metadata":{},"sourceType":"module"}